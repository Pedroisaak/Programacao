/*Position Static > vem como padrao caso nao especificado, deixa o bloco estatico, nao podendo alterar o posicionamento*/
/*Position Absolute > Cria como se fosse uma camada para o bloco, podendo alterar a sua posicao e também deixar um bloco em cima de outro*/
/*Position Fixed > faz com que o elemento que recebeu esta propriedade não se mova na tela. Mesmo que uma página tenha rolamento (scroll). Ao utilizarmos o rolamento para esquerda e direita, ou para cima e para baixo, o elemento não se move.*/
/*Position Relative > é usado quando queremos alterar a posição de um elemento tendo como referência a posição inicial dele*/
/*Position Sticky > O position sticky, que em português significa pegajoso ou colado, é parecido com o fixed, porém a sua diferença é que, em vez dele ficar fixo em relação à tela, ele fica fixo em relação ao rolamento da página*/
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.cabecalho {
    
    background-color: red;
    height: 10vh;
    width: 80vw;
    position: fixed;
    z-index: 2;
    
}


.cabecalho .cabecalho-lateral{
    background-color: rgb(78, 78, 78);
    height: 10vh;
    width: 20vw;
    position: fixed;
    top: 0px;
    right: 0px;
    z-index: 2;

}


.menu ul{
    list-style-type: none; 
   
    
}

.menu li{


}

.conteudo {
    background-color: yellow;
    height: 180vh;
    width: 80vw;
    padding-top: 10vh;  /*Tive que colocar isto pois como o cabecalho esta como fixed, a div conteudo acha que não existe nada e sobrepoe o conteudo, aplicamos entao um padding do mesmo valor da altura do cabecalho*/


}

.conteudo .lorem{
    color: blue;
}


.conteudo-lateral {
    background-color: blueviolet;
    height: 180vh;
    width: 20vw;
    position: absolute;
    right: 0;
}


.rodape {
    background-color: darkcyan;
    height: 10vh;
    width: 100vw;
    position: absolute;
    
}


