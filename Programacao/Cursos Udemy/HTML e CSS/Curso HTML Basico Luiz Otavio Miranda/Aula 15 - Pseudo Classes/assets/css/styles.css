/*Pseudo classes nada mais sao que manipular os atributos se estiver em um determinado estado*/

/*Seleciona a tag h1 que esteja na classe main content e adiciona o atributo hover, com o hover ativo, atribui as configuracoes abaixo*/
.main-content h1:hover{
    background-color: rgb(99, 94, 94);
    transition: all 1s ease-in-out;
}

/*Seleciona a p h1 que esteja na classe main content e adiciona o atributo hover, com o hover ativo, atribui as configuracoes abaixo*/
.main-content p:hover{
    background-color: rgb(151, 88, 88);
    transition: all 1s ease-in-out;
}

a {
    color: darkgreen;
}

/*Seleciona 'a' que esteja na classe main content e caso o link já estiver sido visitado, adicionara as configuracoes abaixo*/
.main-content a:visited {
    color: darkorange;
    
}
/*Seleciona a tag 'a' que esteja na classe main content e caso o link não foi ainda visitado adicionara as configuracoes*/
a:link {
    color: deeppink;
    
}

/*Seleciona todas as tags 'a' e quando passa o mouse em cima do link, adicionara as configuracoes*/
a:hover{
    background-color: darkmagenta;
    color: white;
    text-decoration: none;
}

/*Seleciona a tag 'a' e no momento que o usuario clicar no elemento adicionara as configuracoes*/
a:active{
    background-color: aquamarine;
}

/*Seleciona todos os input que estiver em uso e adicionara as configuracoes*/
input:focus{
    box-shadow: 0 0 15px rgb(87, 78, 78) ;
    outline: none;
    border: 1px solid black;
}
/*Seleciona todos os input que estiverem habilitados e adicionara as configuracoes*/
input:enabled{
    background: red;
}

/*Seleciona todos os input que estiverem desabilitadosadicionara as configuracoes*/
input:disabled{
    background: blue;
}

/*Caso o input estiver com o valor 'checked', usando o simbling selector, pegara a tag 'p' mais proxima e aplicara as configuracoes*/
input:checked + p{
background-color: red;

}

/*seleciona uma li e usando o atributo first-child, só aplicara a configuracao no primeiro li herdeiro*/
.pai .lista li:first-child{
    background: red;
}

/*seleciona uma li e usando o atributo first-child, só aplicara a configuracao no ultimo li herdeiro*/
.pai .lista li:last-child{
    background: blue;
}

/*Usando o atributo not, negando as configuracoes para a classe '.segundo'*/
.atributonot p:not(.segundo){
    background-color: yellow;
}

/*Usando o atributo not, caso o checbox esteja desmarcado, aplicara as configuracoes*/
.checkboxnot:not(:checked) ~ p {
    background-color: red;
}


/*Usando o atributo nth-child, aplicase apenas em tags irmas, usando even, selecionara todos os impares e aplicara as configuracoes*/
.divNthChield li:nth-child(even) {
    background-color: darkgoldenrod;

}

/*Usando o atributo nth-child, aplicase apenas em tags irmas, usando even, selecionara todos os pares e aplicara as configuracoes*/
.divNthChield li:nth-child(odd) {
    background-color: darkcyan;

}